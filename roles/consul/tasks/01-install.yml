- name: create consul system group
  group:
    name: "{{ consul_group }}"
    system: true
    state: present

- name: create consul system user
  user:
    name: "{{ consul_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ consul_group }}"
    create_home: false
    state: present

- name: create consul directories
  file:
    path: "{{ dir.value.path }}"
    state: directory
    owner: "{{ dir.group | default('consul') }}"
    group: "{{ dir.group | default('consul') }}"
    mode: "{{ dir.value.mode | default(755) }}"
  loop: "{{ consul_dirs | dict2items }}"
  loop_control:
    loop_var: dir
    label: "{{ dir.key }}"

- name: install unzip
  apt:
    name: "unzip"
    install_recommends: false
    update_cache: true
    autoclean: true
    autoremove: true
    state: present

- name: download consul
  block:
  - name: create a temporary directory
    ansible.builtin.tempfile:
      state: directory
    register: _temp_dir

  - name: download consul archive
    get_url:
      url: "{{ _archive_url }}"
      dest: "{{ _temp_dir.path }}/{{ _archive }}"
      checksum: "sha256:{{ _archive_checksum }}"
    register: _download_archive
    until: _download_archive is succeeded
    retries: 5
    delay: 2

  - name: unpack consul
    unarchive:
      src: "{{ _temp_dir.path }}/{{ _archive }}"
      dest: "/usr/bin/"
      include: ["consul"]
      remote_src: true
    notify: restart consul

  always:
    - name: remove temporary directory
      ansible.builtin.file:
        path: "{{ _temp_dir.path }}"
        state: absent
      when:
        - _temp_dir.path is defined
        - not lookup("env", "MOLECULE_SCENARIO_NAME") | default("")

- name: create consul config
  tags: config
  copy:
    content: "{{ consul_config | to_nice_json }}"
    dest: "{{ consul_dirs.main.path }}/consul.json"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
    validate: "consul validate -config-format=json %s"
  notify: restart consul

- name: create consul unit file
  tags: config
  copy:
    content: "{{ consul_unit }}"
    dest: "/etc/systemd/system/consul.service"
    owner: root
    group: root
    mode: 0755
  notify: restart consul

- name: enable consul
  systemd_service:
    name: consul
    enabled: true
    daemon_reload: true
  when: not skip_enable
